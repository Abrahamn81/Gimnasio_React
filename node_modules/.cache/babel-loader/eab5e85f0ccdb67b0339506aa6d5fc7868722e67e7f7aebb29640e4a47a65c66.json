{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { getAllUsersService } from \"../services\";\nimport { AuthContext } from \"../context/AuthContext\";\nexport const useUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    token\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        setLoading(true);\n        const data = await getAllUsersService({\n          token\n        });\n        setUsers(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUsers();\n  }, [token]);\n\n  //actualizamos el estado con los todos los usuarios con id diferente a la del usuario borrado\n  const removeUser = id => {\n    setUsers(users.filter(user => user.id !== id));\n  };\n  return {\n    users,\n    loading,\n    error,\n    removeUser\n  };\n};\n_s(useUsers, \"Xpdpg1VUgPjKFQnqeL+dOvEZBFI=\");","map":{"version":3,"names":["useContext","useEffect","useState","getAllUsersService","AuthContext","useUsers","_s","users","setUsers","loading","setLoading","error","setError","token","loadUsers","data","message","removeUser","id","filter","user"],"sources":["/home/hack/Documents/ProyectoFinal/proyecto_react_mio/src/hooks/useUsers.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { getAllUsersService } from \"../services\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const useUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { token } = useContext(AuthContext);\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        setLoading(true);\n\n        const data = await getAllUsersService({ token });\n        setUsers(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUsers();\n  }, [token]);\n\n  //actualizamos el estado con los todos los usuarios con id diferente a la del usuario borrado\n  const removeUser = (id) => {\n    setUsers(users.filter((user) => user.id !== id));\n  };\n  return { users, loading, error, removeUser };\n};\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEW;EAAM,CAAC,GAAGb,UAAU,CAACI,WAAW,CAAC;EACzCH,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFJ,UAAU,CAAC,IAAI,CAAC;QAEhB,MAAMK,IAAI,GAAG,MAAMZ,kBAAkB,CAAC;UAAEU;QAAM,CAAC,CAAC;QAChDL,QAAQ,CAACO,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACK,OAAO,CAAC;MACzB,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,EAAE;EACb,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMI,UAAU,GAAIC,EAAE,IAAK;IACzBV,QAAQ,CAACD,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EACD,OAAO;IAAEX,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEM;EAAW,CAAC;AAC9C,CAAC;AAACX,EAAA,CA3BWD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}